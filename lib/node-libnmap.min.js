/* node-libnmap - https://github.com/jas-/node-libnmap */
var version="v0.0.8",async=require("async"),proc=require("child_process"),netmask=require("netmask").Netmask,nmap=function(n){"use strict";var e={nmap:"/usr/bin/nmap",scripts:"/usr/bin/nmap/scripts/",flags:"-sn -n -oG -",range:"",ports:"",callback:function(){}},f=f||{init:function(){return{name:"node-libnmap",version:version,usage:"https://github.com/jas-/node-libnmap",license:"https://github.com/jas-/node-libnmap/blob/master/LICENSE",issues:"https://github.com/jas-/node-libnmap/issues",nmap:{legal:"http://nmap.org/book/man-legal.html"}}},scan:function(n){n=u.init(n),u.verify(n);var r=!1,f=i.convert(n.range),t=[];async.map(f,function(u,f){n.range=u,r=i.command(n);var e=proc.exec(r);e.stdout.on("data",function(n){var r=i.report(n);r.length>0&&t.push(r)});e.stdout.on("end",function(){f(null,t)})},function(t,i){n.callback(t,i[0])})},discover:function(n){u.check(),n=u.init(n);var h=u.adapters(),o=[],s=[],t=[],f={},r=!1,e=0;async.map(h,function(u,h){f=u,t.push(f),o=i.calculate(u.properties.hosts,u.properties.range),async.map(o,function(t,f){var e=[];n.range=u.properties.cidr,n.range=t,r=i.command(n),proc.exec(r,f)},function(n,r){var u=r.join();s=i.neighbors(u),t[e].neighbors=s,e++,h(n,t)})},function(t,i){n.callback(t,i[0])})}},u=u||{check:function(){if(Number(process.version.match(/^v\d+\.(\d+)/)[1])<=11)throw new Error({Error:"Requires node.js v0.11.* and above"});},init:function(n){return i.merge(n,e)},verify:function(n){if(n.range&&!/array|object/.test(typeof n.range))throw new Error({Error:"Range must be an array of host(s), examples:[192.168.2.10 (single), 10.0.2.0/24 (CIDR), 10.0.10.5-20] (range)"});if(n.ports&&!/^(?:(?:^|[-,])(?:[1-9][0-9]{0,3}|[1-5][0-9]{4}|6(?:[0-4][0-9]{3}|5(?:[0-4][0-9]{2}|5(?:[0-2][0-9]|3[0-5])))))+$/.test(n.ports))throw new Error({Error:"Port(s) must match one of the following examples:512 (single) | 0-65535 (range) | 22-25,80,443,3306 (multiple)"});return!0},interfaces:function(){var t=require("os").networkInterfaces(),u=[],n,i,r;for(n in t)if(/array|object/.test(t[n]))for(i in t[n])/false/.test(t[n][i].internal)&&/ipv4/i.test(t[n][i].family)&&(r={adapter:n,properties:t[n][i]},u.push(r));return u},adapters:function(){var n=[];return this.interfaces().forEach(function(t){var i=new netmask(t.properties.address+"/"+t.properties.netmask);t.properties.cidr=i.base+"/"+i.bitmask,t.properties.hosts=i.size,t.properties.range={start:i.first,end:i.last},n.push(t)}),n}},r=r||{net:{hostname:/^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$/,IPv4:/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/,IPv4CIDR:/(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([1-2]\d|3[0-2]|\d))/,IPv4Range:!1,IPv6:/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*/,IPv6CIDR:/^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*(\/(\d|\d\d|1[0-1]\d|12[0-8]))$/,IPv6Range:!1},perform:function(n,t){return n.test(t)}},i=i||{command:function(n){return n.ports?n.nmap+" "+n.flags+"  -p"+n.ports+" "+n.range:n.nmap+" "+n.flags+" "+n.range},convert:function(n){var f=[],e=[],t=r.net,u=!1;return n.forEach(function(n){switch(!0){case r.perform(t.hostname,n)||r.perform(t.IPv4,n)||r.perform(t.IPv6,n):f.push(n);break;case r.perform(t.IPv4CIDR,n)||r.perform(t.IPv6CIDR,n):u=new netmask(n),e=i.calculate(u.size,{start:u.first,end:u.last}),e.forEach(function(n){f.push(n)})}}),f},calculate:function(n,t){var h=require("os").cpus().length,u=n/h,r=t.start.split("."),s=parseInt(r[3]),o=t.end.split("."),c=parseInt(o[3]),f=[],e=!1,i;for(r.pop(),o.pop(),i=s;i<c;i+=u)e=r[0]+"."+r[1]+"."+r[2]+"."+i+"-"+(i+(u-1)>256?i+(u-1):i+(u-1)-1),f.push(e);return f},merge:function(n,t){n=n||{};for(var i in t)n.hasOwnProperty(i)&&(t[i]=n[i]),n[i]=t[i];return n},neighbors:function(n){var i=n.split("\n"),t=[];return i.forEach(function(n){if(/status: up/i.test(n))var i=/Host: (.*)\s\(\).*/g.exec(n);typeof i=="object"&&t.push(i[1])}),t},report:function(n){var u=n.split("\n"),t={},r=[];return u.forEach(function(n){if(/ports:/i.test(n)){var u=n.split("\t");u&&(u.forEach(function(n){var r,u;/host/i.test(n)&&(r=/host: (.*) \((.*)\)/ig.exec(n),r[1]&&(t.ip=r[1]),r[2]&&(t.hostname=r[2])),/ports/i.test(n)&&(u=/ports: (.*)/ig.exec(n),u=u[1].split(","),t.ports=i.ports(u))}),r.push(t))}}),r},ports:function(n){var r=[],t={},i=!1;return n.forEach(function(n){i=n.split("/"),t.port=i[0],t.state=i[1],t.protocol=i[2],t.owner=i[3],t.service=i[4],t.rpc=i[5],t.version=i[6],r.push(t)}),r}};if(f[n])return f[n].apply(this,Array.prototype.slice.call(arguments,1));if(typeof n!="object"&&n)throw new Error({Error:'Method "'+n+'" does not exist, please see node-libnmap API'});else return f.init.apply(this,arguments)};exports.nmap=nmap;
