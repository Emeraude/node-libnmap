/* node-libnmap - https://github.com/jas-/node-libnmap */
var cluster=require("cluster"),nmap=function(n){"use strict";var f={nmap:"/usr/bin/nmap",scripts:"/usr/bin/nmap/scripts/",flags:"-sn -oG -",range:"",ports:"",callback:function(){}},u=u||{scan:function(n){n=r.init(n)},discover:function(n){n=r.init(n);var s=r.adapters(),h=require("child_process"),o=require("async"),e=[],u=[],t={},f=!1;o.map(s,function(r,s){t=r,e=i.calculate(r.properties.hosts,r.properties.range),o.map(e,function(t,u){var e=[];n.range=r.properties.cidr,n.range=t,f=i.command(n),h.exec(f,u)},function(n,t){if(n)throw n;var r=t.join();u=i.neighbors(r),s(null,u)})},function(i,r){if(i)throw i;t.neighbors=r[0],n.callback(i,t)})}},r=r||{init:function(n){return i.merge(n,f)},cluster:function(n){cluster.isMaster?(require("os").cpus().forEach(function(){cluster.fork()}),Object.keys(cluster.workers).forEach(function(n){cluster.workers[n].on("message",function(n){return console.log(n),n})})):n()},end:function(){Object.keys(cluster.workers).forEach(function(n){cluster.workers[n].destroy()})},interfaces:function(){var t=require("os").networkInterfaces(),u=[],n,i,r;for(n in t)if(/array|object/.test(t[n]))for(i in t[n])/false/.test(t[n][i].internal)&&/ipv4/i.test(t[n][i].family)&&(r={adapter:n,properties:t[n][i]},u.push(r));return u},adapters:function(){var t=require("netmask").Netmask,n=[];return this.interfaces().forEach(function(i){var r=new t(i.properties.address+"/"+i.properties.netmask);i.properties.cidr=r.base+"/"+r.bitmask,i.properties.hosts=r.size,i.properties.range={start:r.first,end:r.last},n.push(i)}),n}},i=i||{command:function(n){return n.ports?n.nmap+" "+n.flags+"  -p"+n.ports+" "+n.range:n.nmap+" "+n.flags+" "+n.range},calculate:function(n,t){var h=require("os").cpus().length,u=n/h,r=t.start.split("."),s=parseInt(r[3]),o=t.end.split("."),c=parseInt(o[3]),f=[],e=!1,i;for(r.pop(),o.pop(),i=s;i<c;i+=u)e=r[0]+"."+r[1]+"."+r[2]+"."+i+"-"+(i+(u-1)>256?i+(u-1):i+(u-1)-1),f.push(e);return f},merge:function(n,t){n=n||{};for(var i in t)n.hasOwnProperty(i)&&(t[i]=n[i]),n[i]=t[i];return n},neighbors:function(n){var i=n.split("\n"),t=[];return i.forEach(function(n){if(/status: up/i.test(n))var i=/Host: (.*)\s\(\).*/g.exec(n);typeof i=="object"&&t.push(i[1])}),t}};if(u[n])return u[n].apply(this,Array.prototype.slice.call(arguments,1));if(typeof n!="object"&&n)throw'Method "'+n+'" does not exist, please see node-libnmap API';else return u.init.apply(this,argumentss)};exports.nmap=nmap;
