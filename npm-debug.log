0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@1.4.9
3 info using node@v0.11.13
4 verbose publish [ '.' ]
5 verbose cache add [ '.', null ]
6 verbose cache add name=undefined spec="." args=[".",null]
7 verbose parsed url { protocol: null,
7 verbose parsed url   slashes: null,
7 verbose parsed url   auth: null,
7 verbose parsed url   host: null,
7 verbose parsed url   port: null,
7 verbose parsed url   hostname: null,
7 verbose parsed url   hash: null,
7 verbose parsed url   search: null,
7 verbose parsed url   query: null,
7 verbose parsed url   pathname: '.',
7 verbose parsed url   path: '.',
7 verbose parsed url   href: '.' }
8 silly lockFile 3a52ce78- .
9 verbose lock . /home/jas/.npm/3a52ce78-.lock
10 verbose tar pack [ '/home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz',
10 verbose tar pack   '.' ]
11 verbose tarball /home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz
12 verbose folder .
13 info prepublish node-libnmap@0.1.4
14 silly lockFile 1f1177db-tar tar://.
15 verbose lock tar://. /home/jas/.npm/1f1177db-tar.lock
16 silly lockFile 82b4f287-06669-0-1837375091854483-tmp-tgz tar:///home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz
17 verbose lock tar:///home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz /home/jas/.npm/82b4f287-06669-0-1837375091854483-tmp-tgz.lock
18 silly lockFile 1f1177db-tar tar://.
19 silly lockFile 1f1177db-tar tar://.
20 silly lockFile 82b4f287-06669-0-1837375091854483-tmp-tgz tar:///home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz
21 silly lockFile 82b4f287-06669-0-1837375091854483-tmp-tgz tar:///home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz
22 verbose tar unpack /home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz
23 silly lockFile ba287775-s-npm-node-libnmap-0-1-4-package tar:///home/jas/.npm/node-libnmap/0.1.4/package
24 verbose lock tar:///home/jas/.npm/node-libnmap/0.1.4/package /home/jas/.npm/ba287775-s-npm-node-libnmap-0-1-4-package.lock
25 silly lockFile 82b4f287-06669-0-1837375091854483-tmp-tgz tar:///home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz
26 verbose lock tar:///home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz /home/jas/.npm/82b4f287-06669-0-1837375091854483-tmp-tgz.lock
27 silly gunzTarPerm modes [ '755', '644' ]
28 silly gunzTarPerm extractEntry package.json
29 silly gunzTarPerm modified mode [ 'package.json', 436, 420 ]
30 silly gunzTarPerm extractEntry .npmignore
31 silly gunzTarPerm modified mode [ '.npmignore', 436, 420 ]
32 silly gunzTarPerm extractEntry README.md
33 silly gunzTarPerm modified mode [ 'README.md', 436, 420 ]
34 silly gunzTarPerm extractEntry LICENSE
35 silly gunzTarPerm modified mode [ 'LICENSE', 436, 420 ]
36 silly gunzTarPerm extractEntry index.js
37 silly gunzTarPerm modified mode [ 'index.js', 436, 420 ]
38 silly gunzTarPerm extractEntry Makefile
39 silly gunzTarPerm modified mode [ 'Makefile', 436, 420 ]
40 silly gunzTarPerm extractEntry .travis.yml
41 silly gunzTarPerm modified mode [ '.travis.yml', 436, 420 ]
42 silly gunzTarPerm extractEntry lib/node-libnmap.js
43 silly gunzTarPerm modified mode [ 'lib/node-libnmap.js', 436, 420 ]
44 silly gunzTarPerm extractEntry lib/node-libnmap.min.js
45 silly gunzTarPerm modified mode [ 'lib/node-libnmap.min.js', 436, 420 ]
46 silly gunzTarPerm extractEntry CHANGELOG
47 silly gunzTarPerm modified mode [ 'CHANGELOG', 436, 420 ]
48 silly gunzTarPerm extractEntry test/discover.js
49 silly gunzTarPerm modified mode [ 'test/discover.js', 436, 420 ]
50 silly gunzTarPerm extractEntry test/init.js
51 silly gunzTarPerm modified mode [ 'test/init.js', 436, 420 ]
52 silly gunzTarPerm extractEntry test/scan.js
53 silly gunzTarPerm modified mode [ 'test/scan.js', 436, 420 ]
54 silly lockFile ba287775-s-npm-node-libnmap-0-1-4-package tar:///home/jas/.npm/node-libnmap/0.1.4/package
55 silly lockFile ba287775-s-npm-node-libnmap-0-1-4-package tar:///home/jas/.npm/node-libnmap/0.1.4/package
56 silly lockFile 82b4f287-06669-0-1837375091854483-tmp-tgz tar:///home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz
57 silly lockFile 82b4f287-06669-0-1837375091854483-tmp-tgz tar:///home/jas/tmp/npm-22008-_qPm6y9S/1400895806669-0.1837375091854483/tmp.tgz
58 silly lockFile 3a52ce78- .
59 silly lockFile 3a52ce78- .
60 silly publish { name: 'node-libnmap',
60 silly publish   version: '0.1.4',
60 silly publish   description: 'Use nmap from node.js',
60 silly publish   author: { name: 'Jason Gerfen', email: 'jason.gerfen@gmail.com' },
60 silly publish   keywords:
60 silly publish    [ 'nmap',
60 silly publish      'nmap host discovery',
60 silly publish      'libnmap',
60 silly publish      'threaded nmap scanner',
60 silly publish      'network host discovery',
60 silly publish      'host operating system discovery',
60 silly publish      'port scanner' ],
60 silly publish   repository: { type: 'git', url: 'https://github.com/jas-/node-libnmap.git' },
60 silly publish   bugs: { url: 'https://github.com/jas-/node-libnmap/issues' },
60 silly publish   scripts: { start: 'node index.js', test: 'make test' },
60 silly publish   dependencies: { netmask: '~1.0.4', async: '~0.2.10', chai: '^1.8.1' },
60 silly publish   devDependencies: { mocha: '~1.17.0', chai: '~1.8.1' },
60 silly publish   license: 'MIT',
60 silly publish   engine: 'node >= v0.11.*',
60 silly publish   readme: '# node-libnmap [![Build Status](https://travis-ci.org/jas-/node-libnmap.png?branch=master)](https://travis-ci.org/jas-/node-libnmap)\n\nAccess nmap using node.js\n\n## install ##\nTo install `npm install node-libnmap`\n\n## tests ##\nTo test `npm test`\n\n## options ##\n* `nmap` - Path to nmap binary\n* `range` - Subnet range(s)\n* `ports` - Port range(s)\n* `callback` - A user defined callback function to retrieve & parse report\n\n## methods ##\n* `init` - Returns version, license, help & nmap legal resources\n* `discover` - Performs auto-discovery of online hosts\n* `scan` - Performs scan given available range & optional port (not yet implemented)\n\n## examples ##\nHere are a few usage examples & their output\n\n### default ###\n```javascript\nconsole.log(require(\'libnmap\').nmap())\n```\n\n### output ###\n```javascript\n> require(\'./\').nmap()\n{ name: \'node-libnmap\',\n  version: \'v0.1.5\',\n  usage: \'https://github.com/jas-/node-libnmap\',\n  license: \'https://github.com/jas-/node-libnmap/blob/master/LICENSE\',\n  issues: \'https://github.com/jas-/node-libnmap/issues\',\n  nmap: { legal: \'http://nmap.org/book/man-legal.html\' } }\n```\n\n### discover ###\nThe discover method is the quickest method but is limited to finding local\npeers within the same CIDR per interface.\n\n```javascript\nrequire(\'libnmap\').nmap(\'discover\', function(err, report){\n  if (err) throw err\n  console.log(report)\n})\n```\n\n### output ###\n```javascript\n{ adapter: \'eth0\',\n  properties:\n   { address: \'10.0.2.15\',\n     netmask: \'255.255.255.0\',\n     family: \'IPv4\',\n     mac: \'52:54:00:12:34:56\',\n     internal: false,\n     cidr: \'10.0.2.0/24\',\n     hosts: 256,\n     range: { start: \'10.0.2.1\', end: \'10.0.2.254\' } },\n  neighbors: [ \'10.0.2.2\', \'10.0.2.3\', \'10.0.2.15\' ] }\n```\n\n### scan ###\nA manually specified scan example using a single host, a CIDR range a host\nrange as well as a port range specification.\n\n```javascript\nvar opts = {\n  range: [\'localhost\', \'10.0.2.0/24\', \'192.168.2.0/25\']\n}\nrequire(\'libnmap\').nmap(\'scan\', opts, function(err, report){\n  if (err) throw err\n  report.forEach(function(item){\n    console.log(item[0])\n  })\n})\n\n```\n\n### output ###\n\n```javascript\n{ ip: \'127.0.0.1\',\n  hostname: \'localhost\',\n  ports:\n   [ { port: \'22\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ssh\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'10.0.2.15\',\n  ports:\n   [ { port: \'22\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ssh\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'192.168.2.15\',\n  ports:\n   [ { port: \'22\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ssh\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'192.168.2.2\',\n  ports:\n   [ { port: \'513\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'login\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'514\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'shell\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'631\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ipp\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'10.0.2.3\',\n  ports:\n   [ { port: \'80\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'http\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'513\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'login\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'514\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'shell\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'5952\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'unknown\',\n       rpc: \'\',\n       version: \'\' } ] }\n```\n\n## error handling ##\nThe following errors are thrown when invalid configuration options are passed\nto the module and/or when the necessary node.js version is below version v0.11.*\n\n### method ###\nIf you attempt to specify an unkown or unimplemented method, the following error\nis thrown. Allowed methods are `scan` & `discover`.\n\n```javascript\nMethod "[missing method]" does not exist, please see node-libnmap API\n```\n\n### version requirement ###\nIf your node.js installation is below version v0.11 the following error is\nthrown\n\n```javascript\nRequires node.js v0.11.* and above\n```\n\n### nmap binary ###\nIf your system does not have the nmap binary installed the following error is\nthrown\n\n```javascript\nnmap binary not found, install nmap\n```\n\n### scanning ranges ###\nWhen specifying an invalid range to the `scan` method the following error is\nthrown. Valid range types are a single hostname/ipv4 (ipv6 is not yet\nimplemented), a CIDR range notation or a range.\n\n```javascript\nRange must be an array of host(s), examples: [\'192.168.2.10\', \'10.0.2.0/24\', \'10.0.10.5-20\']\n```\n\n### port range ###\nA range of ports may also be specified with the `scan` method, for an invalid\nport specification the following error is thrown.\n\n```javascript\nPort(s) must match one of the following examples: 512 (single) | 0-65535 (range) | 22-25,80,443,3306 (multiple)\n```\n\n### ulimit ###\nIf you recieve the `spawn EAGAIN` or `spawn EMFILE` error(s) you have reached\nthe max number of `max user processes`. This error is generally thrown if your\nattempting to scan a very large network block.\n\nTo alleviate this you may need to increase the max number of processes and/or\nwhich can file handles can be done like so (though not recommended):\n\n```sh\n$ ulimit -u 65000\n$ ulimit -n 65000\n```\n\n*Important* These limits are in place to help protect the operating system\nagainst attacks such as a [fork bombing](http://en.wikipedia.org/wiki/Fork_bomb)\n& [chroot jail breaking](http://www.bpfh.net/simes/computing/chroot-break.html).\n\n## performance ##\nA note on performance of nmap scans; the nmap tool already makes efforts to\nutilize parallel processing when multiple processor cores are available.\n\nEven with that in mind this library performs the following calculation prior\nto running scans on an IP range. `ip-range / cpu`. It tries to split the\nIP range into chunks then creates separate threads performing each scan\nsequentially.\n\nFor example instead of executing nmap like this `nmap -sn -oG - 10.0.2.0/24`\nit instead breaks the subnet range into chunks based on the amount of cpu\ncores like this (i.e. 8 cores, where each command is run in its own thread)\n\n```\nnmap -sn -oG - 10.0.2.1-31\nnmap -sn -oG - 10.0.2.33-63\nnmap -sn -oG - 10.0.2.65-95\nnmap -sn -oG - 10.0.2.97-127\nnmap -sn -oG - 10.0.2.129-159\nnmap -sn -oG - 10.0.2.161-191\nnmap -sn -oG - 10.0.2.193-223\nnmap -sn -oG - 10.0.2.225-255\n```\n\nThe technical details of [Fyodor\'s](http://insecure.org/fyodor/) optimizations\ncan be found @ [insecure.org](http://nmap.org/book/man-performance.html).\n\n## benchmarks ##\nThe results here are all coming from a virtual environment with limited system\nresources but should give an overall picture of performance of the scans. My VM\nenvironment is using 8 cores with 4 threads per core given a total returned from\n`require(\'os\').cpus.length` = 32.\n\n### Nmap host discovery ###\n```sh\n$ time nmap -sn -oG - 10.0.2.0/24\n# Nmap 5.51 scan initiated Wed Jan  8 18:54:07 2014 as: nmap -sn -oG - 10.0.2.0/24\nHost: 10.0.2.2 ()       Status: Up\nHost: 10.0.2.3 ()       Status: Up\nHost: 10.0.2.15 ()      Status: Up\n# Nmap done at Wed Jan  8 18:54:26 2014 -- 256 IP addresses (3 hosts up) scanned in 19.33 seconds\n\nreal    0m19.339s\nuser    0m0.052s\nsys     0m0.080s\n```\n\n### Nmap host `discover` method using node-libnmap ###\n```javascript\n$ time node test/run.js\n{ adapter: \'eth0\',\n  properties:\n   { address: \'10.0.2.15\',\n     netmask: \'255.255.255.0\',\n     family: \'IPv4\',\n     mac: \'52:54:00:12:34:56\',\n     internal: false,\n     cidr: \'10.0.2.0/24\',\n     hosts: 256,\n     range: { start: \'10.0.2.1\', end: \'10.0.2.254\' } },\n  neighbors: [ \'10.0.2.2\', \'10.0.2.3\', \'10.0.2.15\' ] }\n\nreal    0m3.323s\nuser    0m0.326s\nsys     0m0.412s\n```\n\nAnd an example with multiple adapters on multiple 802.11Q segments\n```javascript\n$ time node test/run.js\n[ { adapter: \'eth0\',\n    properties:\n     { address: \'10.0.2.15\',\n       netmask: \'255.255.255.0\',\n       family: \'IPv4\',\n       mac: \'52:54:00:12:34:56\',\n       internal: false,\n       cidr: \'10.0.2.0/24\',\n       hosts: 256,\n       range: {start: \'10.0.2.0\', end: \'10.0.2.255\'} },\n    neighbors: [ \'10.0.2.2\', \'10.0.2.3\', \'10.0.2.15\' ] },\n  { adapter: \'eth1\',\n    properties:\n     { address: \'192.168.2.15\',\n       netmask: \'255.255.255.128\',\n       family: \'IPv4\',\n       mac: \'52:54:00:12:34:57\',\n       internal: false,\n       cidr: \'192.168.2.0/25\',\n       hosts: 128,\n       range: {start: \'192.168.2.1\', end: \'192.168.2.128\'} },\n    neighbors: [ \'192.168.2.2\', \'192.168.2.3\', \'192.168.2.15\' ] } ]\n\nreal    0m3.447s\nuser    0m0.493s\nsys     0m0.796s\n```\n\n### Nmap full port scan ###\n```sh\n$ time nmap -T4 -oG - localhost 10.0.2.0/24 192.168.2.0/25\n# Nmap 5.51 scan initiated Sun Jan 26 08:03:18 2014 as: nmap -T4 -oG - localhost 10.0.2.0/24 192.168.2.0/25\nHost: 127.0.0.1 (localhost)     Status: Up\nHost: 127.0.0.1 (localhost)     Ports: 22/open/tcp//ssh///      Ignored State: closed (999)\nHost: 10.0.2.2 ()       Status: Up\nHost: 10.0.2.2 ()       Ports: 513/open/tcp//login///, 514/open/tcp//shell///, 631/open/tcp//ipp///, 1192/filtered/tcp//caids-sensor///, 1524/filtered/tcp//ingreslock///, 1533/filtered/tcp//virtual-places///, 1862/filtered/tcp//mysql-cm-agent///, 1864/filtered/tcp//paradym-31///, 2179/filtered/tcp//vmrdp///, 2222/open/tcp//EtherNet|IP-1///, 2381/filtered/tcp//compaq-https///, 3000/open/tcp//ppp///, 3003/filtered/tcp//cgms///, 3369/filtered/tcp//satvid-datalnk///, 4343/open/tcp//unicall///, 5901/open/tcp//vnc-1///, 7019/filtered/tcp//unknown///, 8000/open/tcp//http-alt///, 8080/open/tcp//http-proxy///, 8300/filtered/tcp//tmi///, 9009/filtered/tcp//pichat///, 9594/filtered/tcp//msgsys///, 10009/filtered/tcp//swdtp-sv///, 16000/filtered/tcp//fmsas///       Ignored State: closed (976)\nHost: 10.0.2.15 ()      Status: Up\nHost: 10.0.2.15 ()      Ports: 22/open/tcp//ssh///      Ignored State: closed (999)\nHost: 192.168.2.2 ()    Status: Up\nHost: 192.168.2.2 ()    Ports: 513/open/tcp//login///, 514/open/tcp//shell///, 631/open/tcp//ipp///, 1174/filtered/tcp//fnet-remote-ui///, 2222/open/tcp//EtherNet|IP-1///, 3000/open/tcp//ppp///, 4343/open/tcp//unicall///, 5901/open/tcp//vnc-1///, 7402/filtered/tcp//rtps-dd-mt///, 8000/open/tcp//http-alt///, 8002/filtered/tcp//teradataordbms///, 8080/open/tcp//http-proxy///, 9100/filtered/tcp//jetdirect///, 9666/filtered/tcp//unknown///, 9968/filtered/tcp//unknown///, 11110/filtered/tcp//unknown///, 54045/filtered/tcp//unknown///       Ignored State: closed (983)\nHost: 192.168.2.3 ()    Status: Up\nHost: 192.168.2.3 ()    Ports: 80/open/tcp//http///, 513/open/tcp//login///, 514/open/tcp//shell///, 1051/filtered/tcp//optima-vnet///  Ignored State: closed (996)\nHost: 192.168.2.15 ()   Status: Up\nHost: 192.168.2.15 ()   Ports: 22/open/tcp//ssh///      Ignored State: closed (999)\n# Nmap done at Sun Jan 26 08:06:52 2014 -- 385 IP addresses (6 hosts up) scanned in 214.20 seconds\n\nreal    3m34.218s\nuser    0m0.911s\nsys     0m3.315s\n```\n\n### Nmap host `scan` method using node-libnmap ###\nThe test case used:\n```javascript\nvar libnmap = require(\'node-libnmap\')\n\nvar opts = {\n  range: [\'localhost\', \'10.0.2.0/24\', \'192.168.2.0/25\']\n}\n\nlibnmap.nmap(\'scan\', opts, function(err, report){\n  if (err) throw err\n  report.forEach(function(item){\n    console.log(item[0])\n  })\n})\n```\n\nThe results\n```javascript\n{ ip: \'127.0.0.1\',\n  hostname: \'localhost\',\n  ports:\n   [ { port: \'22\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ssh\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'10.0.2.15\',\n  ports:\n   [ { port: \'22\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ssh\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'192.168.2.15\',\n  ports:\n   [ { port: \'22\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ssh\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'192.168.2.2\',\n  ports:\n   [ { port: \'255\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'unknown\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'513\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'login\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'514\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'shell\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'631\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ipp\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'1186\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'mysql-cluster\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'2222\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'EtherNet|IP-1\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'3000\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ppp\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'4343\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'unicall\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'5901\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'vnc-1\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'8000\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'http-alt\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'8080\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'http-proxy\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'9111\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'DragonIDSConsole\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'19801\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'unknown\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'192.168.2.3\',\n  ports:\n   [ { port: \'80\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'http\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'513\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'login\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'514\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'shell\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'1812\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'radius\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'3211\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'avsecuremgmt\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'4449\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'privatewire\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'7999\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'irdmi2\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'10.0.2.2\',\n  ports:\n   [ { port: \'513\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'login\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'514\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'shell\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'631\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ipp\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'2222\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'EtherNet|IP-1\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'3000\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'ppp\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'4343\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'unicall\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'5901\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'vnc-1\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'8000\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'http-alt\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'8080\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'http-proxy\',\n       rpc: \'\',\n       version: \'\' } ] }\n{ ip: \'10.0.2.3\',\n  ports:\n   [ { port: \'80\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'http\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'513\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'login\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'514\',\n       state: \'open\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'shell\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'1036\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'nsstp\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'2605\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'bgpd\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'5963\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'indy\',\n       rpc: \'\',\n       version: \'\' },\n     { port: \'50001\',\n       state: \'filtered\',\n       protocol: \'tcp\',\n       owner: \'\',\n       service: \'unknown\',\n       rpc: \'\',\n       version: \'\' } ] }\n\nreal    2m32.158s\nuser    0m13.066s\nsys     0m8.890s\n```\n\n### Class B network scans ###\nTo really test the performance of the module I did several scans of a class B\nnetwork containing a maximum host count of `32766`. Below are the times for\nboth scans.\n\n```sh\n$ time nmap -T4 -n -oG - 155.97.0.0/17\n\nreal    10m32.856s\nuser    0m11.709s\nsys     0m33.364s\n```\n\n```sh\n$ time node nmap-test.js\n\nreal    0m32.034s\nuser    1m3.209s\nsys     0m33.950s\n```\n\nMileage may vary\n\n## contributing ##\nI welcome contributions. Testing, patches, features etc. are appreciated. To\nsubmit a pull request the following instructions will help.\n\n### fork ###\nFirst fork the project from [github.com](https://github.com/jas-/node-libnmap).\n\n### upstream ###\n1. To ensure changes are as up to date as possible it is recommended to add an\nupstream branch to rebase any upstream changes like so:\n`git remote add upstream https://github.com/jas-/node-libnmap.git`\n\n2. You will then need to `merge` it to track the `contribute` branch:\n`git fetch upstream`\n\n### changes ###\nAny contributions you make should be made under a unique branch to avoid\nconflicts. While creating your branch it is recommended you track changes to the\n`contribute` branch like so: `git checkout -b my-new-feature -t origin/contribute`\n',
60 silly publish   readmeFilename: 'README.md',
60 silly publish   homepage: 'https://github.com/jas-/node-libnmap',
60 silly publish   _id: 'node-libnmap@0.1.4',
60 silly publish   _shasum: 'b7681894332d6f3155a219f8b8518b0ba0ab38f5',
60 silly publish   _from: '.' }
61 verbose url raw node-libnmap
62 verbose url resolving [ 'https://registry.npmjs.org/', './node-libnmap' ]
63 verbose url resolved https://registry.npmjs.org/node-libnmap
64 info trying registry request attempt 1 at 19:43:30
65 http PUT https://registry.npmjs.org/node-libnmap
66 http 403 https://registry.npmjs.org/node-libnmap
67 verbose headers { date: 'Sat, 24 May 2014 01:43:26 GMT',
67 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R14B04)',
67 verbose headers   'content-type': 'application/json',
67 verbose headers   'cache-control': 'max-age=1',
67 verbose headers   'content-length': '25813',
67 verbose headers   'accept-ranges': 'bytes',
67 verbose headers   via: '1.1 varnish',
67 verbose headers   'x-served-by': 'cache-sv61-SJC3',
67 verbose headers   'x-cache': 'MISS',
67 verbose headers   'x-cache-hits': '0',
67 verbose headers   'x-timer': 'S1400895805.536884,VS0,VE490',
67 verbose headers   connection: 'close' }
68 error publish Failed PUT 403
69 error Error: forbidden cannot modify pre-existing version: 0.1.4
69 error old={"name":"node-libnmap","version":"0.1.4","description":"Use nmap from node.js","author":{"name":"Jason Gerfen","email":"jason.gerfen@gmail.com"},"keywords":["nmap","nmap host discovery","libnmap","threaded nmap scanner","network host discovery","host operating system discovery","port scanner"],"repository":{"type":"git","url":"https://github.com/jas-/node-libnmap.git"},"bugs":{"url":"https://github.com/jas-/node-libnmap/issues"},"scripts":{"start":"node index.js","test":"make test"},"dependencies":{"netmask":"~1.0.4","async":"~0.2.10","chai":"^1.8.1"},"devDependencies":{"mocha":"~1.17.0","chai":"~1.8.1"},"license":"MIT","engine":"node >= v0.11.*","homepage":"https://github.com/jas-/node-libnmap","_id":"node-libnmap@0.1.4","_shasum":"c6408cbe268f4c15dbc0babe2bb86d10c5715dc1","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"jas-","email":"jason.gerfen@gmail.com"},"maintainers":[{"name":"jas-","email":"jason.gerfen@gmail.com"}],"dist":{"shasum":"c6408cbe268f4c15dbc0babe2bb86d10c5715dc1","tarball":"http://registry.npmjs.org/node-libnmap/-/node-libnmap-0.1.4.tgz"}}
69 error new={"name":"node-libnmap","version":"0.1.4","description":"Use nmap from node.js","author":{"name":"Jason Gerfen","email":"jason.gerfen@gmail.com"},"keywords":["nmap","nmap host discovery","libnmap","threaded nmap scanner","network host discovery","host operating system discovery","port scanner"],"repository":{"type":"git","url":"https://github.com/jas-/node-libnmap.git"},"bugs":{"url":"https://github.com/jas-/node-libnmap/issues"},"scripts":{"start":"node index.js","test":"make test"},"dependencies":{"netmask":"~1.0.4","async":"~0.2.10","chai":"^1.8.1"},"devDependencies":{"mocha":"~1.17.0","chai":"~1.8.1"},"license":"MIT","engine":"node >= v0.11.*","readme":"# node-libnmap [![Build Status](https://travis-ci.org/jas-/node-libnmap.png?branch=master)](https://travis-ci.org/jas-/node-libnmap)\u000a\u000aAccess nmap using node.js\u000a\u000a## install ##\u000aTo install `npm install node-libnmap`\u000a\u000a## tests ##\u000aTo test `npm test`\u000a\u000a## options ##\u000a* `nmap` - Path to nmap binary\u000a* `range` - Subnet range(s)\u000a* `ports` - Port range(s)\u000a* `callback` - A user defined callback function to retrieve & parse report\u000a\u000a## methods ##\u000a* `init` - Returns version, license, help & nmap legal resources\u000a* `discover` - Performs auto-discovery of online hosts\u000a* `scan` - Performs scan given available range & optional port (not yet implemented)\u000a\u000a## examples ##\u000aHere are a few usage examples & their output\u000a\u000a### default ###\u000a```javascript\u000aconsole.log(require('libnmap').nmap())\u000a```\u000a\u000a### output ###\u000a```javascript\u000a> require('./').nmap()\u000a{ name: 'node-libnmap',\u000a  version: 'v0.1.5',\u000a  usage: 'https://github.com/jas-/node-libnmap',\u000a  license: 'https://github.com/jas-/node-libnmap/blob/master/LICENSE',\u000a  issues: 'https://github.com/jas-/node-libnmap/issues',\u000a  nmap: { legal: 'http://nmap.org/book/man-legal.html' } }\u000a```\u000a\u000a### discover ###\u000aThe discover method is the quickest method but is limited to finding local\u000apeers within the same CIDR per interface.\u000a\u000a```javascript\u000arequire('libnmap').nmap('discover', function(err, report){\u000a  if (err) throw err\u000a  console.log(report)\u000a})\u000a```\u000a\u000a### output ###\u000a```javascript\u000a{ adapter: 'eth0',\u000a  properties:\u000a   { address: '10.0.2.15',\u000a     netmask: '255.255.255.0',\u000a     family: 'IPv4',\u000a     mac: '52:54:00:12:34:56',\u000a     internal: false,\u000a     cidr: '10.0.2.0/24',\u000a     hosts: 256,\u000a     range: { start: '10.0.2.1', end: '10.0.2.254' } },\u000a  neighbors: [ '10.0.2.2', '10.0.2.3', '10.0.2.15' ] }\u000a```\u000a\u000a### scan ###\u000aA manually specified scan example using a single host, a CIDR range a host\u000arange as well as a port range specification.\u000a\u000a```javascript\u000avar opts = {\u000a  range: ['localhost', '10.0.2.0/24', '192.168.2.0/25']\u000a}\u000arequire('libnmap').nmap('scan', opts, function(err, report){\u000a  if (err) throw err\u000a  report.forEach(function(item){\u000a    console.log(item[0])\u000a  })\u000a})\u000a\u000a```\u000a\u000a### output ###\u000a\u000a```javascript\u000a{ ip: '127.0.0.1',\u000a  hostname: 'localhost',\u000a  ports:\u000a   [ { port: '22',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ssh',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '10.0.2.15',\u000a  ports:\u000a   [ { port: '22',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ssh',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '192.168.2.15',\u000a  ports:\u000a   [ { port: '22',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ssh',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '192.168.2.2',\u000a  ports:\u000a   [ { port: '513',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'login',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '514',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'shell',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '631',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ipp',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '10.0.2.3',\u000a  ports:\u000a   [ { port: '80',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'http',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '513',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'login',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '514',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'shell',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '5952',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'unknown',\u000a       rpc: '',\u000a       version: '' } ] }\u000a```\u000a\u000a## error handling ##\u000aThe following errors are thrown when invalid configuration options are passed\u000ato the module and/or when the necessary node.js version is below version v0.11.*\u000a\u000a### method ###\u000aIf you attempt to specify an unkown or unimplemented method, the following error\u000ais thrown. Allowed methods are `scan` & `discover`.\u000a\u000a```javascript\u000aMethod \"[missing method]\" does not exist, please see node-libnmap API\u000a```\u000a\u000a### version requirement ###\u000aIf your node.js installation is below version v0.11 the following error is\u000athrown\u000a\u000a```javascript\u000aRequires node.js v0.11.* and above\u000a```\u000a\u000a### nmap binary ###\u000aIf your system does not have the nmap binary installed the following error is\u000athrown\u000a\u000a```javascript\u000anmap binary not found, install nmap\u000a```\u000a\u000a### scanning ranges ###\u000aWhen specifying an invalid range to the `scan` method the following error is\u000athrown. Valid range types are a single hostname/ipv4 (ipv6 is not yet\u000aimplemented), a CIDR range notation or a range.\u000a\u000a```javascript\u000aRange must be an array of host(s), examples: ['192.168.2.10', '10.0.2.0/24', '10.0.10.5-20']\u000a```\u000a\u000a### port range ###\u000aA range of ports may also be specified with the `scan` method, for an invalid\u000aport specification the following error is thrown.\u000a\u000a```javascript\u000aPort(s) must match one of the following examples: 512 (single) | 0-65535 (range) | 22-25,80,443,3306 (multiple)\u000a```\u000a\u000a### ulimit ###\u000aIf you recieve the `spawn EAGAIN` or `spawn EMFILE` error(s) you have reached\u000athe max number of `max user processes`. This error is generally thrown if your\u000aattempting to scan a very large network block.\u000a\u000aTo alleviate this you may need to increase the max number of processes and/or\u000awhich can file handles can be done like so (though not recommended):\u000a\u000a```sh\u000a$ ulimit -u 65000\u000a$ ulimit -n 65000\u000a```\u000a\u000a*Important* These limits are in place to help protect the operating system\u000aagainst attacks such as a [fork bombing](http://en.wikipedia.org/wiki/Fork_bomb)\u000a& [chroot jail breaking](http://www.bpfh.net/simes/computing/chroot-break.html).\u000a\u000a## performance ##\u000aA note on performance of nmap scans; the nmap tool already makes efforts to\u000autilize parallel processing when multiple processor cores are available.\u000a\u000aEven with that in mind this library performs the following calculation prior\u000ato running scans on an IP range. `ip-range / cpu`. It tries to split the\u000aIP range into chunks then creates separate threads performing each scan\u000asequentially.\u000a\u000aFor example instead of executing nmap like this `nmap -sn -oG - 10.0.2.0/24`\u000ait instead breaks the subnet range into chunks based on the amount of cpu\u000acores like this (i.e. 8 cores, where each command is run in its own thread)\u000a\u000a```\u000anmap -sn -oG - 10.0.2.1-31\u000anmap -sn -oG - 10.0.2.33-63\u000anmap -sn -oG - 10.0.2.65-95\u000anmap -sn -oG - 10.0.2.97-127\u000anmap -sn -oG - 10.0.2.129-159\u000anmap -sn -oG - 10.0.2.161-191\u000anmap -sn -oG - 10.0.2.193-223\u000anmap -sn -oG - 10.0.2.225-255\u000a```\u000a\u000aThe technical details of [Fyodor's](http://insecure.org/fyodor/) optimizations\u000acan be found @ [insecure.org](http://nmap.org/book/man-performance.html).\u000a\u000a## benchmarks ##\u000aThe results here are all coming from a virtual environment with limited system\u000aresources but should give an overall picture of performance of the scans. My VM\u000aenvironment is using 8 cores with 4 threads per core given a total returned from\u000a`require('os').cpus.length` = 32.\u000a\u000a### Nmap host discovery ###\u000a```sh\u000a$ time nmap -sn -oG - 10.0.2.0/24\u000a# Nmap 5.51 scan initiated Wed Jan  8 18:54:07 2014 as: nmap -sn -oG - 10.0.2.0/24\u000aHost: 10.0.2.2 ()       Status: Up\u000aHost: 10.0.2.3 ()       Status: Up\u000aHost: 10.0.2.15 ()      Status: Up\u000a# Nmap done at Wed Jan  8 18:54:26 2014 -- 256 IP addresses (3 hosts up) scanned in 19.33 seconds\u000a\u000areal    0m19.339s\u000auser    0m0.052s\u000asys     0m0.080s\u000a```\u000a\u000a### Nmap host `discover` method using node-libnmap ###\u000a```javascript\u000a$ time node test/run.js\u000a{ adapter: 'eth0',\u000a  properties:\u000a   { address: '10.0.2.15',\u000a     netmask: '255.255.255.0',\u000a     family: 'IPv4',\u000a     mac: '52:54:00:12:34:56',\u000a     internal: false,\u000a     cidr: '10.0.2.0/24',\u000a     hosts: 256,\u000a     range: { start: '10.0.2.1', end: '10.0.2.254' } },\u000a  neighbors: [ '10.0.2.2', '10.0.2.3', '10.0.2.15' ] }\u000a\u000areal    0m3.323s\u000auser    0m0.326s\u000asys     0m0.412s\u000a```\u000a\u000aAnd an example with multiple adapters on multiple 802.11Q segments\u000a```javascript\u000a$ time node test/run.js\u000a[ { adapter: 'eth0',\u000a    properties:\u000a     { address: '10.0.2.15',\u000a       netmask: '255.255.255.0',\u000a       family: 'IPv4',\u000a       mac: '52:54:00:12:34:56',\u000a       internal: false,\u000a       cidr: '10.0.2.0/24',\u000a       hosts: 256,\u000a       range: {start: '10.0.2.0', end: '10.0.2.255'} },\u000a    neighbors: [ '10.0.2.2', '10.0.2.3', '10.0.2.15' ] },\u000a  { adapter: 'eth1',\u000a    properties:\u000a     { address: '192.168.2.15',\u000a       netmask: '255.255.255.128',\u000a       family: 'IPv4',\u000a       mac: '52:54:00:12:34:57',\u000a       internal: false,\u000a       cidr: '192.168.2.0/25',\u000a       hosts: 128,\u000a       range: {start: '192.168.2.1', end: '192.168.2.128'} },\u000a    neighbors: [ '192.168.2.2', '192.168.2.3', '192.168.2.15' ] } ]\u000a\u000areal    0m3.447s\u000auser    0m0.493s\u000asys     0m0.796s\u000a```\u000a\u000a### Nmap full port scan ###\u000a```sh\u000a$ time nmap -T4 -oG - localhost 10.0.2.0/24 192.168.2.0/25\u000a# Nmap 5.51 scan initiated Sun Jan 26 08:03:18 2014 as: nmap -T4 -oG - localhost 10.0.2.0/24 192.168.2.0/25\u000aHost: 127.0.0.1 (localhost)     Status: Up\u000aHost: 127.0.0.1 (localhost)     Ports: 22/open/tcp//ssh///      Ignored State: closed (999)\u000aHost: 10.0.2.2 ()       Status: Up\u000aHost: 10.0.2.2 ()       Ports: 513/open/tcp//login///, 514/open/tcp//shell///, 631/open/tcp//ipp///, 1192/filtered/tcp//caids-sensor///, 1524/filtered/tcp//ingreslock///, 1533/filtered/tcp//virtual-places///, 1862/filtered/tcp//mysql-cm-agent///, 1864/filtered/tcp//paradym-31///, 2179/filtered/tcp//vmrdp///, 2222/open/tcp//EtherNet|IP-1///, 2381/filtered/tcp//compaq-https///, 3000/open/tcp//ppp///, 3003/filtered/tcp//cgms///, 3369/filtered/tcp//satvid-datalnk///, 4343/open/tcp//unicall///, 5901/open/tcp//vnc-1///, 7019/filtered/tcp//unknown///, 8000/open/tcp//http-alt///, 8080/open/tcp//http-proxy///, 8300/filtered/tcp//tmi///, 9009/filtered/tcp//pichat///, 9594/filtered/tcp//msgsys///, 10009/filtered/tcp//swdtp-sv///, 16000/filtered/tcp//fmsas///       Ignored State: closed (976)\u000aHost: 10.0.2.15 ()      Status: Up\u000aHost: 10.0.2.15 ()      Ports: 22/open/tcp//ssh///      Ignored State: closed (999)\u000aHost: 192.168.2.2 ()    Status: Up\u000aHost: 192.168.2.2 ()    Ports: 513/open/tcp//login///, 514/open/tcp//shell///, 631/open/tcp//ipp///, 1174/filtered/tcp//fnet-remote-ui///, 2222/open/tcp//EtherNet|IP-1///, 3000/open/tcp//ppp///, 4343/open/tcp//unicall///, 5901/open/tcp//vnc-1///, 7402/filtered/tcp//rtps-dd-mt///, 8000/open/tcp//http-alt///, 8002/filtered/tcp//teradataordbms///, 8080/open/tcp//http-proxy///, 9100/filtered/tcp//jetdirect///, 9666/filtered/tcp//unknown///, 9968/filtered/tcp//unknown///, 11110/filtered/tcp//unknown///, 54045/filtered/tcp//unknown///       Ignored State: closed (983)\u000aHost: 192.168.2.3 ()    Status: Up\u000aHost: 192.168.2.3 ()    Ports: 80/open/tcp//http///, 513/open/tcp//login///, 514/open/tcp//shell///, 1051/filtered/tcp//optima-vnet///  Ignored State: closed (996)\u000aHost: 192.168.2.15 ()   Status: Up\u000aHost: 192.168.2.15 ()   Ports: 22/open/tcp//ssh///      Ignored State: closed (999)\u000a# Nmap done at Sun Jan 26 08:06:52 2014 -- 385 IP addresses (6 hosts up) scanned in 214.20 seconds\u000a\u000areal    3m34.218s\u000auser    0m0.911s\u000asys     0m3.315s\u000a```\u000a\u000a### Nmap host `scan` method using node-libnmap ###\u000aThe test case used:\u000a```javascript\u000avar libnmap = require('node-libnmap')\u000a\u000avar opts = {\u000a  range: ['localhost', '10.0.2.0/24', '192.168.2.0/25']\u000a}\u000a\u000alibnmap.nmap('scan', opts, function(err, report){\u000a  if (err) throw err\u000a  report.forEach(function(item){\u000a    console.log(item[0])\u000a  })\u000a})\u000a```\u000a\u000aThe results\u000a```javascript\u000a{ ip: '127.0.0.1',\u000a  hostname: 'localhost',\u000a  ports:\u000a   [ { port: '22',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ssh',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '10.0.2.15',\u000a  ports:\u000a   [ { port: '22',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ssh',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '192.168.2.15',\u000a  ports:\u000a   [ { port: '22',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ssh',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '192.168.2.2',\u000a  ports:\u000a   [ { port: '255',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'unknown',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '513',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'login',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '514',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'shell',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '631',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ipp',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '1186',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'mysql-cluster',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '2222',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'EtherNet|IP-1',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '3000',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ppp',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '4343',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'unicall',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '5901',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'vnc-1',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '8000',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'http-alt',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '8080',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'http-proxy',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '9111',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'DragonIDSConsole',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '19801',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'unknown',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '192.168.2.3',\u000a  ports:\u000a   [ { port: '80',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'http',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '513',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'login',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '514',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'shell',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '1812',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'radius',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '3211',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'avsecuremgmt',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '4449',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'privatewire',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '7999',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'irdmi2',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '10.0.2.2',\u000a  ports:\u000a   [ { port: '513',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'login',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '514',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'shell',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '631',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ipp',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '2222',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'EtherNet|IP-1',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '3000',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'ppp',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '4343',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'unicall',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '5901',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'vnc-1',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '8000',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'http-alt',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '8080',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'http-proxy',\u000a       rpc: '',\u000a       version: '' } ] }\u000a{ ip: '10.0.2.3',\u000a  ports:\u000a   [ { port: '80',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'http',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '513',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'login',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '514',\u000a       state: 'open',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'shell',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '1036',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'nsstp',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '2605',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'bgpd',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '5963',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'indy',\u000a       rpc: '',\u000a       version: '' },\u000a     { port: '50001',\u000a       state: 'filtered',\u000a       protocol: 'tcp',\u000a       owner: '',\u000a       service: 'unknown',\u000a       rpc: '',\u000a       version: '' } ] }\u000a\u000areal    2m32.158s\u000auser    0m13.066s\u000asys     0m8.890s\u000a```\u000a\u000a### Class B network scans ###\u000aTo really test the performance of the module I did several scans of a class B\u000anetwork containing a maximum host count of `32766`. Below are the times for\u000aboth scans.\u000a\u000a```sh\u000a$ time nmap -T4 -n -oG - 155.97.0.0/17\u000a\u000areal    10m32.856s\u000auser    0m11.709s\u000asys     0m33.364s\u000a```\u000a\u000a```sh\u000a$ time node nmap-test.js\u000a\u000areal    0m32.034s\u000auser    1m3.209s\u000asys     0m33.950s\u000a```\u000a\u000aMileage may vary\u000a\u000a## contributing ##\u000aI welcome contributions. Testing, patches, features etc. are appreciated. To\u000asubmit a pull request the following instructions will help.\u000a\u000a### fork ###\u000aFirst fork the project from [github.com](https://github.com/jas-/node-libnmap).\u000a\u000a### upstream ###\u000a1. To ensure changes are as up to date as possible it is recommended to add an\u000aupstream branch to rebase any upstream changes like so:\u000a`git remote add upstream https://github.com/jas-/node-libnmap.git`\u000a\u000a2. You will then need to `merge` it to track the `contribute` branch:\u000a`git fetch upstream`\u000a\u000a### changes ###\u000aAny contributions you make should be made under a unique branch to avoid\u000aconflicts. While creating your branch it is recommended you track changes to the\u000a`contribute` branch like so: `git checkout -b my-new-feature -t origin/contribute`\u000a","readmeFilename":"README.md","homepage":"https://github.com/jas-/node-libnmap","_id":"node-libnmap@0.1.4","_shasum":"b7681894332d6f3155a219f8b8518b0ba0ab38f5","_from":".","_npmVersion":"1.4.9","_npmUser":{"name":"jas-","email":"jason.gerfen@gmail.com"},"maintainers":[{"name":"jas-","email":"jason.gerfen@gmail.com"}],"dist":{"shasum":"b7681894332d6f3155a219f8b8518b0ba0ab38f5","tarball":"http://registry.npmjs.org/node-libnmap/-/node-libnmap-0.1.4.tgz"}}: node-libnmap
69 error     at RegClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:273:14)
69 error     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:211:65)
69 error     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:123:22)
69 error     at Request.EventEmitter.emit (events.js:110:17)
69 error     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:893:14)
69 error     at Request.EventEmitter.emit (events.js:129:20)
69 error     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:844:12)
69 error     at IncomingMessage.EventEmitter.emit (events.js:129:20)
69 error     at _stream_readable.js:898:16
69 error     at process._tickCallback (node.js:343:11)
70 error If you need help, you may report this *entire* log,
70 error including the npm and node versions, at:
70 error     <http://github.com/npm/npm/issues>
71 error System Linux 2.6.32-431.11.2.el6.x86_64
72 error command "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
73 error cwd /home/jas/projects/mine/node-libnmap
74 error node -v v0.11.13
75 error npm -v 1.4.9
76 verbose exit [ 1, true ]
